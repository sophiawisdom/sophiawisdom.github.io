<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Sophia Wisdom's Blog</title><link>https://sophiawisdom.github.io/posts/</link><description>Recent content in Posts on Sophia Wisdom's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 17 Jan 2023 04:20:46 -0800</lastBuildDate><atom:link href="https://sophiawisdom.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>S4 Optimization: An introduction to GPU performance optimization through the lens of a single kernel</title><link>https://sophiawisdom.github.io/posts/ssm/</link><pubDate>Tue, 17 Jan 2023 04:20:46 -0800</pubDate><guid>https://sophiawisdom.github.io/posts/ssm/</guid><description>A friend of mine was desperate &amp;ndash; just desperate &amp;ndash; for speedy kernels. She knew the math, she knew the ML, she knew what had to be done. But her kernels were ludicrously slow because she didn&amp;rsquo;t understand the GPU. The GPU is a fundamentally different machine than the CPU, with fundamentally different capabilities, especially with the rise of Tensor Cores and other fixed-function &amp;ldquo;accelerators within the accelerator&amp;rdquo;. It is difficult to predict and understand what math operations can be made to run quickly on the GPU and why.</description></item><item><title>SSM Optimization: An introduction to GPU performance optimization through the lens of a single kernel</title><link>https://sophiawisdom.github.io/posts/ssm-optimization/</link><pubDate>Tue, 17 Jan 2023 04:20:46 -0800</pubDate><guid>https://sophiawisdom.github.io/posts/ssm-optimization/</guid><description>I didn&amp;rsquo;t have a job and was jonesing for some fun. A friend was working on a new machine learning architecture called State Space Models (SSMs). What better use of my time than being her personal performance engineer? We got cracking at Noisebridge, and in the course of a few amphetamine-fueled hours, we had a should-be-functional Triton kernel. Unfortunately our code was so perfect we crashed the compiler in two different ways.</description></item></channel></rss>